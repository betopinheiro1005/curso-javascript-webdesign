"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const selectorsLibrary_1 = __importDefault(require("../selectorsLibrary"));

const cssVariablesLibrary_1 = __importDefault(require("../cssVariablesLibrary"));

const keyframesLibrary_1 = __importDefault(require("../keyframesLibrary")); // eslint-disable-next-line @typescript-eslint/explicit-function-return-type


const generate = () => {
  const classSelector = selectorsLibrary_1.default.getClassSelector();
  const idSelector = selectorsLibrary_1.default.getIdSelector();
  const cssVariables = Object.entries(cssVariablesLibrary_1.default.meta);
  const keyframes = Object.entries(keyframesLibrary_1.default.meta);

  const getUnused = obj => obj.filter(entry => entry[1].appearanceCount === 0).map(([name]) => name);

  const unusedCssVariables = getUnused(cssVariables);
  const unusedKeyframes = getUnused(keyframes);
  const unusedClasses = getUnused(Object.entries(classSelector.meta));
  const unusedIds = getUnused(Object.entries(idSelector.meta));
  const classUsageCount = {};
  const idUsageCount = {};
  const cssVariablesUsageCount = {};
  const keyframesUsageCount = {};
  Object.keys(classSelector.values).forEach(v => {
    classUsageCount[v] = classSelector.meta[v].appearanceCount;
  });
  Object.keys(idSelector.values).forEach(v => {
    idUsageCount[v] = idSelector.meta[v].appearanceCount;
  });
  cssVariables.forEach(([name, meta]) => {
    cssVariablesUsageCount[name] = meta.appearanceCount;
  });
  keyframes.forEach(([name, meta]) => {
    keyframesUsageCount[name] = meta.appearanceCount;
  });
  return {
    ids: {
      unused: unusedIds,
      usageCount: idUsageCount
    },
    classes: {
      unused: unusedClasses,
      usageCount: classUsageCount
    },
    cssVariables: {
      unused: unusedCssVariables,
      usageCount: cssVariablesUsageCount
    },
    keyframes: {
      unused: unusedKeyframes,
      usageCount: keyframesUsageCount
    }
  };
};

exports.default = generate;
module.exports = exports.default;