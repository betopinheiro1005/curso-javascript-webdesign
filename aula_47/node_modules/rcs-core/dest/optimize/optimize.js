"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const generate_1 = __importDefault(require("../mapping/generate"));

const statistics_1 = require("../statistics");

const load_1 = __importDefault(require("../mapping/load"));

const selectorsLibrary_1 = __importDefault(require("../selectorsLibrary"));

const keyframesLibrary_1 = __importDefault(require("../keyframesLibrary"));

const cssVariablesLibrary_1 = __importDefault(require("../cssVariablesLibrary"));

const separateMappingSelectors_1 = __importDefault(require("./separateMappingSelectors"));

const sortSelectors_1 = __importDefault(require("./sortSelectors"));

const optimize = () => {
  const mapping = (0, generate_1.default)();
  const statistics = (0, statistics_1.getStatistics)();

  if (!statistics) {
    return;
  } // sorting
  // renaming into new mapping


  const separateMapping = (0, separateMappingSelectors_1.default)(mapping.selectors);
  const optimizedMapping = {
    ids: [],
    classes: [],
    keyframes: [],
    cssVariables: []
  }; // optimize each library

  Object.entries(separateMapping).forEach(([key, selectors]) => {
    const statisticsData = statistics[key];
    const newSortedSelectors = (0, sortSelectors_1.default)(selectors.map(([s]) => s), statisticsData);
    optimizedMapping[key] = newSortedSelectors;
  }); // could be a cold start but
  // reset everything just in case

  selectorsLibrary_1.default.reset();
  keyframesLibrary_1.default.reset();
  cssVariablesLibrary_1.default.reset(); // fill libraries with optimized mapping

  Object.entries(optimizedMapping).forEach(([key, selectors]) => {
    switch (key) {
      case 'ids':
        selectors.forEach(selector => selectorsLibrary_1.default.set(`#${selector}`));
        break;

      case 'keyframes':
        selectors.forEach(selector => keyframesLibrary_1.default.set(`@${selector}`));
        break;

      case 'cssVariables':
        selectors.forEach(selector => cssVariablesLibrary_1.default.set(`--${selector}`));
        break;

      case 'classes':
      default:
        selectors.forEach(selector => selectorsLibrary_1.default.set(`.${selector}`));
    }
  }); // load with the same attribute selectors
  // these cannot be optimized yet

  (0, load_1.default)({
    attributeSelectors: mapping.attributeSelectors
  });
};

exports.default = optimize;
module.exports = exports.default;